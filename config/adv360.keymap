#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

#define STRINGIFY(x) #x
#define EXPAND_AND_STRINGIFY(x) STRINGIFY(x)

#define KEYS_NONE

#define KEYS_LEFT 0 1 2 3 4 5 6 \
                  14 15 16 17 18 19 20 \
                  28 29 30 31 32 33 34 \
                  46 47 48 49 50 51 \
                  60 61 62 63 64

#define KEYS_RIGHT 7 8 9 10 11 12 13 \
                   21 22 23 24 25 26 27 \
                   39 40 41 42 43 44 45 \
                   54 55 56 57 58 59 \
                   71 72 73 74 75

#define THUMBS_LEFT 35 36 52 65 66 67

#define THUMBS_RIGHT 37 38 53 68 69 70

#define THUMBS THUMBS_LEFT THUMBS_RIGHT

#define HMT(ID, NAME, TERM, KEYS) \
    ID: mod_tap_##ID  { \
        compatible = "zmk,behavior-hold-tap"; \
        label = NAME; \
        tapping-term-ms = <TERM>; \
        flavor = "tap-preferred"; \
        #binding-cells = <2>; \
        bindings = <&kp>, <&kp>; \
        hold-trigger-key-positions = <KEYS>; \
    };

#define HMH(ID, NAME, TERM) \
    ID: mod_hold_##ID { \
        compatible = "zmk,behavior-hold-tap"; \
        label = NAME; \
        #binding-cells = <2>; \
        tapping-term-ms = <TERM>; \
        flavor = "hold-preferred"; \
        bindings = <&kp>, <&kp>; \
    };

#define HML(ID, NAME, TERM) \
    ID: mod_layer_##ID { \
        compatible = "zmk,behavior-hold-tap"; \
        label = NAME; \
        #binding-cells = <2>; \
        quick-tap-ms = <155>; \
        tapping-term-ms = <TERM>; \
        flavor = "hold-preferred"; \
        bindings = <&mo>, <&kp>; \
    };

/ {
    behaviors {
        #include "macros.dtsi"
        #include "version.dtsi"

        HMH(hmh, "MODS_HOLD", 200)
        HML(hmo, "MODS_LAYER", 200)

        HMT(hmt, "MODS_THUMB", 150, KEYS_NONE)
        HMT(hmr, "MODS_RIGHT", 150, KEYS_LEFT THUMBS_LEFT)
        HMT(hml, "MODS_LEFT",  150, KEYS_RIGHT THUMBS_RIGHT)

        HMT(hmrs, "MODS_RIGHT_SLOW", 180, KEYS_LEFT)
        HMT(hmls, "MODS_LEFT_SLOW",  180, KEYS_RIGHT)

        hmc: homerow_mods_caps {
                compatible = "zmk,behavior-hold-tap";
                label = "HOMEROW_MODS_CAPS";
                tapping-term-ms = <125>;
                flavor = "hold-preferred";
                #binding-cells = <2>;
                bindings = <&kp>, <&caps_word>;
        };
    };


  keymap {
    compatible = "zmk,keymap";

    // &kp TAB    &hmls LGUI A &hml LALT S &hml LCTRL D &hml LSHFT F &kp G  &kp LEFT  &hmh LALT TAB &hmc LGUI 0 &hmh LGUI CAPS &hmh RALT DEL &kp DOWN &kp H  &hmr RSHFT J &hmr RCTRL K &hmr RALT L  &hmrs RGUI SEMI &kp SQT

    default_layer {
      bindings = <
        &kp PSCRN  &kp N1       &kp N2      &kp N3       &kp N4       &kp N5 &mo 3                                                            &mo 2    &kp N6 &kp N7       &kp N8       &kp N9       &kp N0          &kp PSCRN
        &kp CAPS   &kp Q        &kp W       &kp E        &kp R        &kp T  &kp RIGHT                                                        &kp UP   &kp Y  &kp U        &kp I        &kp O        &kp P           &kp DEL
        &kp TAB    &kp A        &kp S       &kp D        &hml LSHFT F &kp G  &kp LEFT  &hmt LALT TAB &hmc LGUI 0 &hmt LGUI CAPS &hmt RALT SQT &kp DOWN &kp H  &hmr RSHFT J &kp K        &kp L        &kp SEMI        &kp SQT
        &kp LSHFT  &kp Z        &kp X       &kp C        &kp V        &kp B                                 &hmo 3 HOME &hmo 2 PG_UP                   &kp N  &kp M        &kp COMMA    &kp DOT      &kp FSLH        &kp RSHFT
        &mo 4      &kp LGUI     &kp GRAVE   &kp BSLH     &kp EQUAL             &kp SPACE &hmt LCTRL ESC &hmo 1 END &hmo 1 PG_DN &hmt RCTRL ENTER &kp BSPC     &kp MINUS    &kp LBKT     &kp RBKT     &kp RGUI        &mo 4
      >;
    };
    fn {
      bindings = <
        &trans &kp F1  &kp F2   &kp F3    &kp F4    &kp F5    &kp C_PP                                       &kp C_MUTE     &kp F6    &kp F7     &kp F8     &kp F9     &kp F10   &trans
        &trans &trans  &trans   &trans    &trans    &trans    &kp C_NEXT                                     &kp C_VOL_UP   &kp HOME  &kp PG_DN  &kp PG_UP  &kp END    &trans    &trans
        &trans &trans  &trans   &trans    &trans    &trans    &kp C_PREV    &trans &trans &trans &trans      &kp C_VOL_DN   &kp LEFT  &kp DOWN   &kp UP     &kp RIGHT  &trans    &trans
        &trans &trans  &trans   &trans    &trans    &trans                         &trans &trans                            &trans    &trans     &trans     &trans     &trans    &trans
        &trans &trans  &trans   &trans    &trans                     &trans &trans &trans &trans &trans &trans                        &trans     &trans     &trans     &trans    &trans
      >;
    };
    mod {
      bindings = <
        &bt BT_CLR  &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &none                                       &none &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &bt BT_CLR
        &bootloader &none        &none        &none        &none        &none        &none                                       &none &none       &none        &none        &none        &none         &bootloader
        &none       &none        &none        &none        &none        &none        &none      &none &none &none &none          &none &none       &none        &none        &none        &none         &none
        &none       &none        &none        &none        &none   &none                              &none &none                      &none       &none        &none        &none        &none         &none
        &none       &none        &none        &none        &none                          &none &none &none &none &none &none                      &none        &none        &none        &none         &none
      >;
    };
    keypad {
      bindings = <
        &trans &trans &trans &trans &trans   &trans &none                                                          &none &none &kp KP_NUM     &kp KP_DIVIDE   &kp KP_MULTIPLY &kp KP_EQUAL  &none
        &trans &trans &trans &trans &trans   &trans &none                                                          &none &none &kp KP_N7      &kp KP_N8       &kp KP_N9       &kp KP_MINUS  &none
        &trans &trans &trans &trans &trans   &trans &none             &trans &trans &trans &trans                  &none &none &kp KP_N4      &kp KP_N5       &kp KP_N6       &kp KP_PLUS   &none
        &trans &trans &trans &trans &trans   &trans                          &trans &trans                               &none &kp KP_N1      &kp KP_N2       &kp KP_N3       &kp KP_ENTER  &none
        &trans &trans &trans &trans &trans                     &trans &trans &none  &trans &trans &trans                       &kp KP_COMMA   &kp KP_NUMBER_0 &kp KP_DOT      &kp KP_ENTER  &none
      >;
    };
  };
};
